$date
	Thu Apr 15 23:51:46 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module memory_tb $end
$var wire 16 ! data_out2 [15:0] $end
$var wire 16 " data_out [15:0] $end
$var reg 1 # clk $end
$var reg 1 $ data_in $end
$var reg 1 % rst $end
$var integer 32 & i [31:0] $end
$scope module uut1 $end
$var wire 1 # clk $end
$var wire 1 $ data_in $end
$var wire 32 ' data_out2 [31:0] $end
$var wire 1 % rst $end
$var wire 1 ( enable $end
$var wire 32 ) data_out [31:0] $end
$var reg 3 * address [2:0] $end
$var reg 3 + counter [2:0] $end
$var reg 3 , next_counter [2:0] $end
$var reg 2 - next_state [1:0] $end
$var reg 2 . state [1:0] $end
$var integer 32 / i [31:0] $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk2[4] $end
$upscope $end
$scope begin genblk2[5] $end
$upscope $end
$scope begin genblk2[6] $end
$upscope $end
$scope begin genblk2[7] $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk2[4] $end
$upscope $end
$scope begin genblk2[5] $end
$upscope $end
$scope begin genblk2[6] $end
$upscope $end
$scope begin genblk2[7] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk2[4] $end
$upscope $end
$scope begin genblk2[5] $end
$upscope $end
$scope begin genblk2[6] $end
$upscope $end
$scope begin genblk2[7] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk2[4] $end
$upscope $end
$scope begin genblk2[5] $end
$upscope $end
$scope begin genblk2[6] $end
$upscope $end
$scope begin genblk2[7] $end
$upscope $end
$upscope $end
$upscope $end
$scope task send_data $end
$var reg 5 0 address [4:0] $end
$var reg 8 1 data [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
bx 0
bx /
b1 .
b1 -
b0 ,
b0 +
bx *
bx )
1(
bx '
bx &
1%
1$
0#
bx "
bx !
$end
#10
b0 *
1#
#20
0#
#30
1#
#40
0#
#50
1#
#60
0#
0%
#70
b1111111111111111 !
b11111111111111111111111111111111 '
b0 "
b0 )
b100 /
1#
#80
0#
#90
b100 /
1#
#100
0#
#110
b100 /
1#
#120
0#
1%
#130
1#
#140
0#
#150
1#
#160
0#
#170
1#
#180
0#
b0 0
b1011 1
#185
b10 ,
b10 -
0$
#190
1#
#200
0(
b1 ,
b10 +
b10 .
0#
b0 &
#210
1#
#220
b0 ,
b1 +
0#
b1 &
#230
1#
#240
b111 ,
b11 -
b0 +
0#
b10 &
#250
1#
#260
b110 ,
b111 +
b11 .
0#
b11 &
#270
1#
#280
b101 ,
b110 +
0#
b100 &
#290
1#
#300
b100 ,
b101 +
0#
1$
b0 &
#310
1#
#320
b11 ,
b100 +
0#
b1 &
#330
1#
#340
b10 ,
b11 +
0#
0$
b10 &
#350
1#
#360
b1 ,
b10 +
0#
1$
b11 &
#370
1#
#380
b0 ,
b1 +
0#
0$
b100 &
#390
1#
#400
b1 -
b0 +
0#
b101 &
#410
1#
#420
b1111111111010011 !
b11111111111111111111111111010011 '
b101100 "
b101100 )
1(
b10 ,
b10 -
b1 .
0#
b110 &
#430
1#
#440
b1111111111111111 !
b11111111111111111111111111111111 '
b0 "
b0 )
0(
b1 ,
b10 +
b10 .
0#
b111 &
#450
1#
#460
b0 ,
b1 +
0#
1$
b1000 &
#470
b100 *
1#
#480
b111 ,
b11 -
b0 +
0#
b1 0
b1111 1
#485
0$
#490
b10 *
1#
#500
b110 ,
b111 +
b11 .
0#
1$
b0 &
#510
1#
#520
b101 ,
b110 +
0#
0$
b1 &
#530
1#
#540
b100 ,
b101 +
0#
b10 &
#550
1#
#560
b11 ,
b100 +
0#
b11 &
#570
1#
#580
b10 ,
b11 +
0#
b100 &
#590
1#
#600
b1 ,
b10 +
0#
1$
b0 &
#610
1#
#620
b0 ,
b1 +
0#
b1 &
#630
1#
#640
b1 -
b0 +
0#
b10 &
#650
1#
#660
b1111111111010011 !
b11111111000111101111111111010011 '
b101100 "
b111000010000000000101100 )
1(
b1 .
0#
b11 &
#670
b0 *
1#
#680
b1111111111111111 !
b11111111111111111111111111111111 '
b0 "
b0 )
0(
b10 +
b10 .
b1 ,
b10 -
0#
0$
b100 &
#690
1#
#700
b0 ,
b1 +
0#
b101 &
#710
1#
#720
b111 ,
b11 -
b0 +
0#
b110 &
#730
1#
#740
b110 ,
b111 +
b11 .
0#
b111 &
#750
1#
#760
b101 ,
b110 +
0#
1$
b1000 &
#770
1#
#780
b100 ,
b101 +
0#
b10 0
b10111 1
#785
0$
#790
1#
#800
b11 ,
b100 +
0#
b0 &
#810
1#
#820
b10 ,
b11 +
0#
1$
b1 &
#830
1#
#840
b1 ,
b10 +
0#
0$
b10 &
#850
1#
#860
b0 ,
b1 +
0#
b11 &
#870
1#
#880
b1 -
b0 +
0#
b100 &
#890
1#
#900
b1111111111101101 !
b11111111000111101111111111101101 '
b10010 "
b111000010000000000010010 )
1(
b1 .
0#
1$
b0 &
#910
1#
#920
0#
b1 &
#930
1#
#940
0#
b10 &
#950
1#
#960
b1111111111111111 !
b11111111111111111111111111111111 '
b0 "
b0 )
0(
b10 +
b10 .
b1 ,
b10 -
0#
0$
b11 &
#970
1#
#980
b0 ,
b1 +
0#
1$
b100 &
#990
b100 *
1#
#1000
b111 ,
b11 -
b0 +
0#
0$
b101 &
#1010
b10 *
1#
#1020
b110 ,
b111 +
b11 .
0#
b110 &
#1030
1#
#1040
b101 ,
b110 +
0#
b111 &
#1050
1#
#1060
b100 ,
b101 +
0#
1$
b1000 &
#1070
1#
#1080
b11 ,
b100 +
0#
b11 0
b110111 1
#1085
0$
#1090
1#
#1100
b10 ,
b11 +
0#
1$
b0 &
#1110
1#
#1120
b1 ,
b10 +
0#
b1 &
#1130
1#
#1140
b0 ,
b1 +
0#
0$
b10 &
#1150
1#
#1160
b1 -
b0 +
0#
b11 &
#1170
1#
#1180
b1111111111101101 !
b11111111110010111111111111101101 '
b10010 "
b1101000000000000010010 )
1(
b10 ,
b10 -
b1 .
0#
b100 &
#1190
b0 *
1#
#1200
b0 ,
b1 -
0#
1$
b0 &
#1210
1#
#1220
0#
b1 &
#1230
1#
#1240
0#
b10 &
#1250
1#
#1260
b1111111111111111 !
b11111111111111111111111111111111 '
b0 "
b0 )
0(
b10 +
b10 .
b1 ,
b10 -
0#
0$
b11 &
#1270
1#
#1280
b0 ,
b1 +
0#
1$
b100 &
#1290
b100 *
1#
#1300
b111 ,
b11 -
b0 +
0#
b101 &
#1310
b110 *
1#
#1320
b110 ,
b111 +
b11 .
0#
0$
b110 &
#1330
1#
#1340
b101 ,
b110 +
0#
b111 &
#1350
1#
#1360
b100 ,
b101 +
0#
1$
b1000 &
#1370
1#
#1380
b11 ,
b100 +
0#
