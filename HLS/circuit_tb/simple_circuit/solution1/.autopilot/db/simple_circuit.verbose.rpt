

================================================================
== Vivado HLS Report for 'simple_circuit'
================================================================
* Date:           Mon Apr  5 16:27:56 2021

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        simple_circuit
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 0.978 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|   0 ns   |   0 ns   |    0|    0|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+-------+-------+-----+
|       Name      | BRAM_18K| DSP48E|   FF  |  LUT  | URAM|
+-----------------+---------+-------+-------+-------+-----+
|DSP              |        -|      -|      -|      -|    -|
|Expression       |        -|      -|      0|      6|    -|
|FIFO             |        -|      -|      -|      -|    -|
|Instance         |        -|      -|      -|      -|    -|
|Memory           |        -|      -|      -|      -|    -|
|Multiplexer      |        -|      -|      -|      -|    -|
|Register         |        -|      -|      -|      -|    -|
+-----------------+---------+-------+-------+-------+-----+
|Total            |        0|      0|      0|      6|    0|
+-----------------+---------+-------+-------+-------+-----+
|Available        |      100|     90|  41600|  20800|    0|
+-----------------+---------+-------+-------+-------+-----+
|Utilization (%)  |        0|      0|      0|   ~0  |    0|
+-----------------+---------+-------+-------+-------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP48E: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-------------------+----------+-------+---+----+------------+------------+
    |   Variable Name   | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-------------------+----------+-------+---+----+------------+------------+
    |and_ln19_fu_55_p2  |    and   |      0|  0|   2|           1|           1|
    |d                  |    or    |      0|  0|   2|           1|           1|
    |xor_ln19_fu_61_p2  |    xor   |      0|  0|   2|           1|           2|
    +-------------------+----------+-------+---+----+------------+------------+
    |Total              |          |      0|  0|   6|           3|           4|
    +-------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+----------+-----+-----+---------+--------------+---------+
| RTL Ports| Dir | Bits| Protocol| Source Object|  C Type |
+----------+-----+-----+---------+--------------+---------+
|a         |  in |    1| ap_none |       a      |  scalar |
|b         |  in |    1| ap_none |       b      |  scalar |
|c         |  in |    1| ap_none |       c      |  scalar |
|d         | out |    1| ap_none |       d      | pointer |
+----------+-----+-----+---------+--------------+---------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 1
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.97>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %a) nounwind, !map !7"   --->   Operation 2 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %b) nounwind, !map !13"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %c) nounwind, !map !17"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %d) nounwind, !map !21"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @simple_circuit_str) nounwind"   --->   Operation 6 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%c_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %c) nounwind" [simple_circuit/.apc/simple_circuit.cpp:4]   --->   Operation 7 'read' 'c_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%b_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %b) nounwind" [simple_circuit/.apc/simple_circuit.cpp:4]   --->   Operation 8 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%a_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %a) nounwind" [simple_circuit/.apc/simple_circuit.cpp:4]   --->   Operation 9 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_circuit/.apc/simple_circuit.cpp:9]   --->   Operation 10 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %a, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_circuit/.apc/simple_circuit.cpp:10]   --->   Operation 11 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %b, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_circuit/.apc/simple_circuit.cpp:11]   --->   Operation 12 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %c, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_circuit/.apc/simple_circuit.cpp:12]   --->   Operation 13 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %d, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_circuit/.apc/simple_circuit.cpp:13]   --->   Operation 14 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node or_ln19)   --->   "%and_ln19 = and i1 %a_read, %b_read" [simple_circuit/.apc/simple_circuit.cpp:19]   --->   Operation 15 'and' 'and_ln19' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node or_ln19)   --->   "%xor_ln19 = xor i1 %c_read, true" [simple_circuit/.apc/simple_circuit.cpp:19]   --->   Operation 16 'xor' 'xor_ln19' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln19 = or i1 %and_ln19, %xor_ln19" [simple_circuit/.apc/simple_circuit.cpp:19]   --->   Operation 17 'or' 'or_ln19' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i1P(i1* %d, i1 %or_ln19) nounwind" [simple_circuit/.apc/simple_circuit.cpp:19]   --->   Operation 18 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "ret void" [simple_circuit/.apc/simple_circuit.cpp:23]   --->   Operation 19 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_none:ce=0
Port [ a]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ b]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ c]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
specbitsmap_ln0    (specbitsmap  ) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
spectopmodule_ln0  (spectopmodule) [ 00]
c_read             (read         ) [ 00]
b_read             (read         ) [ 00]
a_read             (read         ) [ 00]
specinterface_ln9  (specinterface) [ 00]
specinterface_ln10 (specinterface) [ 00]
specinterface_ln11 (specinterface) [ 00]
specinterface_ln12 (specinterface) [ 00]
specinterface_ln13 (specinterface) [ 00]
and_ln19           (and          ) [ 00]
xor_ln19           (xor          ) [ 00]
or_ln19            (or           ) [ 00]
write_ln19         (write        ) [ 00]
ret_ln23           (ret          ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="a">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="a"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="b">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="b"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="c">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="c"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="d">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="simple_circuit_str"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_none.i1"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_none.i1P"/></StgValue>
</bind>
</comp>

<comp id="30" class="1004" name="c_read_read_fu_30">
<pin_list>
<pin id="31" dir="0" index="0" bw="1" slack="0"/>
<pin id="32" dir="0" index="1" bw="1" slack="0"/>
<pin id="33" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="c_read/1 "/>
</bind>
</comp>

<comp id="36" class="1004" name="b_read_read_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="1" slack="0"/>
<pin id="38" dir="0" index="1" bw="1" slack="0"/>
<pin id="39" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="b_read/1 "/>
</bind>
</comp>

<comp id="42" class="1004" name="a_read_read_fu_42">
<pin_list>
<pin id="43" dir="0" index="0" bw="1" slack="0"/>
<pin id="44" dir="0" index="1" bw="1" slack="0"/>
<pin id="45" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="a_read/1 "/>
</bind>
</comp>

<comp id="48" class="1004" name="write_ln19_write_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="0" slack="0"/>
<pin id="50" dir="0" index="1" bw="1" slack="0"/>
<pin id="51" dir="0" index="2" bw="1" slack="0"/>
<pin id="52" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln19/1 "/>
</bind>
</comp>

<comp id="55" class="1004" name="and_ln19_fu_55">
<pin_list>
<pin id="56" dir="0" index="0" bw="1" slack="0"/>
<pin id="57" dir="0" index="1" bw="1" slack="0"/>
<pin id="58" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln19/1 "/>
</bind>
</comp>

<comp id="61" class="1004" name="xor_ln19_fu_61">
<pin_list>
<pin id="62" dir="0" index="0" bw="1" slack="0"/>
<pin id="63" dir="0" index="1" bw="1" slack="0"/>
<pin id="64" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln19/1 "/>
</bind>
</comp>

<comp id="67" class="1004" name="or_ln19_fu_67">
<pin_list>
<pin id="68" dir="0" index="0" bw="1" slack="0"/>
<pin id="69" dir="0" index="1" bw="1" slack="0"/>
<pin id="70" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln19/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="34"><net_src comp="14" pin="0"/><net_sink comp="30" pin=0"/></net>

<net id="35"><net_src comp="4" pin="0"/><net_sink comp="30" pin=1"/></net>

<net id="40"><net_src comp="14" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="41"><net_src comp="2" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="46"><net_src comp="14" pin="0"/><net_sink comp="42" pin=0"/></net>

<net id="47"><net_src comp="0" pin="0"/><net_sink comp="42" pin=1"/></net>

<net id="53"><net_src comp="28" pin="0"/><net_sink comp="48" pin=0"/></net>

<net id="54"><net_src comp="6" pin="0"/><net_sink comp="48" pin=1"/></net>

<net id="59"><net_src comp="42" pin="2"/><net_sink comp="55" pin=0"/></net>

<net id="60"><net_src comp="36" pin="2"/><net_sink comp="55" pin=1"/></net>

<net id="65"><net_src comp="30" pin="2"/><net_sink comp="61" pin=0"/></net>

<net id="66"><net_src comp="26" pin="0"/><net_sink comp="61" pin=1"/></net>

<net id="71"><net_src comp="55" pin="2"/><net_sink comp="67" pin=0"/></net>

<net id="72"><net_src comp="61" pin="2"/><net_sink comp="67" pin=1"/></net>

<net id="73"><net_src comp="67" pin="2"/><net_sink comp="48" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: d | {1 }
 - Input state : 
	Port: simple_circuit : a | {1 }
	Port: simple_circuit : b | {1 }
	Port: simple_circuit : c | {1 }
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------|---------|---------|
| Operation|     Functional Unit    |    FF   |   LUT   |
|----------|------------------------|---------|---------|
|    and   |     and_ln19_fu_55     |    0    |    2    |
|----------|------------------------|---------|---------|
|    xor   |     xor_ln19_fu_61     |    0    |    2    |
|----------|------------------------|---------|---------|
|    or    |      or_ln19_fu_67     |    0    |    2    |
|----------|------------------------|---------|---------|
|          |    c_read_read_fu_30   |    0    |    0    |
|   read   |    b_read_read_fu_36   |    0    |    0    |
|          |    a_read_read_fu_42   |    0    |    0    |
|----------|------------------------|---------|---------|
|   write  | write_ln19_write_fu_48 |    0    |    0    |
|----------|------------------------|---------|---------|
|   Total  |                        |    0    |    6    |
|----------|------------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |    6   |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    -   |    -   |
+-----------+--------+--------+
|   Total   |    0   |    6   |
+-----------+--------+--------+
